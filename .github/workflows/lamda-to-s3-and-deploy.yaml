name: Deploy Python Lambda to S3

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  S3_BUCKET: fraternitas-prod-microservice
  NAME: fraternitas-prod-microservice

jobs:
  push-python-lamda-to-s3:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::455222299354:role/github_oidc_role_read_write_s3
          aws-region: ${{ env.AWS_REGION }}

      - id: push-python-lamda-to-s3
        uses: ./.github/actions/push-python-lamda-to-s3
        with:
          s3_bucket: ${{ env.S3_BUCKET }}
          name: ${{ env.NAME }}
          version: ${{ github.sha }}
          aws_region: ${{ env.AWS_REGION }}

  run-terraform-apply:
    runs-on: ubuntu-latest
    needs: push-python-lamda-to-s3

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::455222299354:role/github_oidc_role_terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: terraform/phases/prod
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform/phases/prod
        run: terraform validate

      - name: Terraform Apply
        working-directory: terraform/phases/prod
        run: terraform apply -var app_version=${{ github.sha }} -auto-approve
